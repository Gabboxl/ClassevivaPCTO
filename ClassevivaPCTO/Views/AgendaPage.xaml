<Page
    x:Class="ClassevivaPCTO.Views.AgendaPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ClassevivaPCTO"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:controls2="using:ClassevivaPCTO.Controls"
    xmlns:microconverters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True">

    <Page.Resources>
        <ResourceDictionary>
            <microconverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <RelativePanel>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="930" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PopupButtonsRelativePanel.(Grid.Row)" Value="0" />
                        <Setter Target="PopupButtonsRelativePanel.(Grid.Column)" Value="2" />

                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState2">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PopupButtonsRelativePanel.(Grid.Row)" Value="1" />
                        <Setter Target="PopupButtonsRelativePanel.(Grid.Column)" Value="1" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Popup
            x:Name="LezioniPopup"
            IsOpen="False"
            Width="800"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            IsLightDismissEnabled="True"
            ShouldConstrainToRootBounds="True"
            LightDismissOverlayMode="On">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Right"></PaneThemeTransition>
                </TransitionCollection>

            </Popup.ChildTransitions>

            <!-- con il grid mi prendo lo spazio con il binding, poi ci posiziono come voglio gli elementi all'interno -->
            <Grid
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                Width="{Binding ElementName=LezioniPopup, Path=Width}"
                Height="{Binding ElementName=LezioniPopup, Path=Height}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <controls:PropertySizer
                    Grid.Column="0"
                    Grid.RowSpan="2"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Left"
                    IsDragInverted="True"
                    Binding="{x:Bind LezioniPopup.Width, Mode=TwoWay}"
                    Minimum="100" />

                <RelativePanel
                    Grid.Column="1"
                    Grid.Row="0"
                    Margin="0,0,0,24">
                    <TextBlock x:Name="TitoloLezioniPopup" x:Uid="LessonsTitle" FontSize="42"
                               VerticalAlignment="Top"
                               Margin="12,16,0,0" />

                    <muxc:ProgressRing
                        x:Name="LezioniPopupProgressRing"
                        IsActive="True"
                        RelativePanel.RightOf="TitoloLezioniPopup"
                        RelativePanel.AlignVerticalCenterWith="TitoloLezioniPopup"
                        Margin="16,16,0,0" Width="28" Height="28" />
                </RelativePanel>

                <ScrollViewer Grid.Row="1"
                              Grid.Column="1">
                    <StackPanel Margin="4,0,16,0"
                                x:Name="LezioniPopupStackPanel">
                    </StackPanel>
                </ScrollViewer>
            </Grid>

        </Popup>

        <Popup
            x:Name="AgendaPopup"
            IsOpen="False"
            Width="800"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            IsLightDismissEnabled="True"
            ShouldConstrainToRootBounds="True"
            LightDismissOverlayMode="On">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Right"></PaneThemeTransition>
                </TransitionCollection>

            </Popup.ChildTransitions>

            <!-- con il grid mi prendo lo spazio con il binding, poi ci posiziono come voglio gli elementi all'interno -->
            <Grid
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                Width="{Binding ElementName=AgendaPopup, Path=Width}"
                Height="{Binding ElementName=AgendaPopup, Path=Height}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>


                <controls:PropertySizer
                    Grid.Column="0"
                    Grid.RowSpan="2"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Left"
                    IsDragInverted="True"
                    Binding="{x:Bind AgendaPopup.Width, Mode=TwoWay}"
                    Minimum="100" />

                <RelativePanel
                    Grid.Column="1"
                    Grid.Row="0"
                    Margin="0,0,0,24">
                    <TextBlock x:Name="TitoloAgendaPopup" x:Uid="TitoloAgendaPopup" FontSize="42"
                               VerticalAlignment="Top"
                               Margin="12,16,0,0" />

                    <muxc:ProgressRing
                        x:Name="AgendaPopupProgressRing"
                        IsActive="True"
                        RelativePanel.RightOf="TitoloAgendaPopup"
                        RelativePanel.AlignVerticalCenterWith="TitoloAgendaPopup"
                        Margin="16,16,0,0" Width="28" Height="28" />
                </RelativePanel>

                <Grid Grid.Row="1"
                      Margin="4,0,12,0"
                      Grid.Column="1"
                      HorizontalAlignment="Stretch"
                      x:Name="AgendaPopupListviewContainer">
                </Grid>

            </Grid>

        </Popup>


        <Grid
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            RelativePanel.AlignTopWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Rotation="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>

                </Grid.RowDefinitions>


                <RelativePanel Grid.Row="0" Margin="0,16,0,0">
                    <TextBlock x:Name="TextTitolo" x:Uid="AgendaTitle"
                               Style="{StaticResource TitleLargeTextBlockStyle}"

                               Margin="32,0,0,0" />


                    <muxc:ProgressRing IsActive="True" x:Name="ProgressRingAgenda"
                                       RelativePanel.AlignVerticalCenterWith="TextTitolo"
                                       RelativePanel.RightOf="TextTitolo"
                                       Margin="16,0,0,0" Width="28" Height="28"
                                       Visibility="{x:Bind AgendaViewModel.IsLoadingAgenda, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />


                </RelativePanel>

                <Grid Grid.Row="0" Margin="20,0,0,0" Grid.Column="1" HorizontalAlignment="Right"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>

                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <RelativePanel Grid.Row="0" Grid.Column="0" Margin="0,16,0,0" VerticalAlignment="Center">

                        <Button RelativePanel.LeftOf="Separator0" x:Name="AggiornaCommand"
                                RelativePanel.AlignVerticalCenterWithPanel="True"
                                Width="42"
                                Height="32"
                                Margin="16,0,0,0" Click="AggiornaCommand_Click" x:Uid="RefreshButtonTT">
                            <FontIcon FontSize="16" Glyph="&#xE72C;" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" />
                        </Button>

                        <Rectangle x:Name="Separator0" RelativePanel.LeftOf="ButtonYesterday"
                                   Fill="{ThemeResource ControlStrokeColorDefaultBrush}"
                                   Width="1" Height="48" Margin="12,0,0,0" />

                        <Button x:Name="ButtonYesterday" Margin="12,0,0,0"
                                RelativePanel.AlignVerticalCenterWithPanel="True"
                                RelativePanel.LeftOf="CalendarAgenda"
                                Width="42"
                                Height="32"
                                toolkit:FrameworkElementExtensions.Cursor="Hand"
                                Click="ButtonYesterday_Click" x:Uid="AgendaButtonYesterdayTT">
                            <FontIcon FontSize="16" Glyph="&#xE76B;" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" />
                        </Button>

                        <!-- should we set the firstdayofweek in code instead? -->
                        <CalendarDatePicker x:Name="CalendarAgenda" x:Uid="CalendarTT"
                                            RelativePanel.LeftOf="ButtonTomorrow"
                                            FirstDayOfWeek="Monday"
                                            toolkit:FrameworkElementExtensions.Cursor="Hand"
                                            PlaceholderText="Scegli una data" Margin="8,0,8,0"
                                            RelativePanel.AlignVerticalCenterWithPanel="True" MinWidth="116" />

                        <Button x:Name="ButtonTomorrow" Margin="0,0,0,0"
                                RelativePanel.LeftOf="ButtonToday"
                                Width="42"
                                Height="32"
                                RelativePanel.AlignVerticalCenterWithPanel="True"
                                toolkit:FrameworkElementExtensions.Cursor="Hand"
                                Click="ButtonTomorrow_Click" x:Uid="AgendaButtonTomorrowTT">
                            <FontIcon FontSize="16" Glyph="&#xE76C;" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" />
                        </Button>

                        <ToggleButton x:Name="ButtonToday" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      x:Uid="ButtonTodayAgenda" Margin="8,0,0,0"
                                      RelativePanel.LeftOf="Separator1"
                                      RelativePanel.AlignVerticalCenterWithPanel="True"
                                      toolkit:FrameworkElementExtensions.Cursor="Hand"
                                      Click="ButtonToday_Click" />

                        <Rectangle x:Name="Separator1" RelativePanel.LeftOf="TuttiCompitiButton"
                                   Fill="{ThemeResource ControlStrokeColorDefaultBrush}"
                                   Width="1" Height="48" Margin="12,0,0,0" />

                        <Button
                            RelativePanel.AlignVerticalCenterWithPanel="True"
                            x:Name="TuttiCompitiButton"
                            MinWidth="110"
                            RelativePanel.LeftOf="PopupLessonsButton"
                            Click="PopupAgendaButton_OnClick"
                            Margin="12,0,0,0">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">

                                <TextBlock Text="&#xEA98;" VerticalAlignment="Center"
                                           FontFamily="{StaticResource FluentIcons}" />

                                <TextBlock x:Uid="TuttiCompitiButton" />

                            </StackPanel>
                        </Button>

                        <Button
                            RelativePanel.AlignVerticalCenterWithPanel="True"
                            x:Name="PopupLessonsButton"
                            MinWidth="110"
                            Click="PopupLessonsButton_OnClick"
                            RelativePanel.AlignRightWithPanel="True"
                            Margin="8,0,20,0">

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">
                                <TextBlock Text="&#xe7be;" VerticalAlignment="Center"
                                           FontFamily="{StaticResource FluentIcons}" />
                                <TextBlock x:Uid="PopupLessonsButton" />

                            </StackPanel>
                        </Button>

                    </RelativePanel>

                </Grid>

            </Grid>

            <RelativePanel Grid.Row="2"
                           Margin="18"
                           VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                           x:Name="CardPanel"
                           toolkit:FrameworkElementExtensions.EnableActualSizeBinding="true"
                           CornerRadius="8"
                           Padding="12"
                           BorderThickness="1"
                           BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                           Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">

                <controls2:OverviewListView
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Margin="0,0,0,0" x:Name="OverviewListView">
                </controls2:OverviewListView>

            </RelativePanel>

        </Grid>

    </RelativePanel>
</Page>