<Page
    x:Class="ClassevivaPCTO.Views.Agenda"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ClassevivaPCTO"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:controls2="using:ClassevivaPCTO.Controls"
    xmlns:microconverters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:converters="using:ClassevivaPCTO.Converters"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True">

    <Page.Resources>
        <ResourceDictionary>
            <microconverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <RelativePanel>


        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="850" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AutoSuggestBox.(Grid.Row)" Value="0" />

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AutoSuggestBox.(Grid.Row)" Value="1" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Popup
            x:Name="LezioniPopup"
            IsOpen="False"
            Width="1000"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            IsLightDismissEnabled="True"
            ShouldConstrainToRootBounds="True"
            LightDismissOverlayMode="On">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Right"></PaneThemeTransition>
                </TransitionCollection>

            </Popup.ChildTransitions>

            <!-- con il grid mi prendo lo spazio con il binding, poi ci posiziono come voglio gli elementi all'interno -->
            <Grid
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                Width="{Binding ElementName=LezioniPopup, Path=Width}"
                Height="{Binding ElementName=LezioniPopup, Path=Height}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <RelativePanel
                    Grid.Row="0"
                    Margin="0,0,0,24">
                    <TextBlock x:Name="TitoloLezioniPopup" Grid.Row="0" Text="Lezioni" FontSize="42"
                               VerticalAlignment="Top"
                               Margin="32,16,0,0" />

                    <!-- progress ring -->
                    <muxc:ProgressRing
                        x:Name="LezioniPopupProgressRing"
                        IsActive="True"
                        RelativePanel.RightOf="TitoloLezioniPopup"
                        RelativePanel.AlignVerticalCenterWith="TitoloLezioniPopup"
                        Margin="32,16,0,0"/>


                </RelativePanel>

                <ScrollViewer Grid.Row="1">
                    <StackPanel
                        x:Name="LezioniPopupStackPanel">
                    </StackPanel>
                </ScrollViewer>
            </Grid>

        </Popup>



        <Popup
            x:Name="AgendaPopup"
            IsOpen="False"
            Width="1000"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            IsLightDismissEnabled="True"
            ShouldConstrainToRootBounds="True"
            LightDismissOverlayMode="On">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Right"></PaneThemeTransition>
                </TransitionCollection>

            </Popup.ChildTransitions>

            <!-- con il grid mi prendo lo spazio con il binding, poi ci posiziono come voglio gli elementi all'interno -->
            <Grid
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                Width="{Binding ElementName=AgendaPopup, Path=Width}"
                Height="{Binding ElementName=AgendaPopup, Path=Height}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <RelativePanel
                    Grid.Row="0"
                    Margin="0,0,0,24">
                    <TextBlock x:Name="TitoloAgendaPopup" Grid.Row="0" Text="Agenda" FontSize="42"
                               VerticalAlignment="Top"
                               Margin="32,16,0,0" />


                    <!-- progress ring -->
                    <muxc:ProgressRing
                        x:Name="AgendaPopupProgressRing"
                        IsActive="True"
                        RelativePanel.RightOf="TitoloAgendaPopup"
                        RelativePanel.AlignVerticalCenterWith="TitoloAgendaPopup"
                        Margin="32,16,0,0"/>
                </RelativePanel>

                <ScrollViewer Grid.Row="1">
                    <StackPanel
                        x:Name="AgendaPopupStackPanel">
                    </StackPanel>
                </ScrollViewer>
            </Grid>

        </Popup>


        <Grid
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            RelativePanel.AlignTopWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <RelativePanel Grid.Row="0">
                <TextBlock x:Name="TextTitolo" Grid.Row="0" Text="Agenda" FontSize="42" VerticalAlignment="Top"
                           Margin="32,16,0,0" />

                <AppBarButton RelativePanel.RightOf="TextTitolo" x:Name="AggiornaCommand" VerticalAlignment="Top"
                              Margin="32,16,0,0" Icon="Refresh" Label="Aggiorna" Click="AggiornaCommand_Click" />
            </RelativePanel>


            <AutoSuggestBox
                x:Name="AutoSuggestBox"
                Grid.Row="0"
                QueryIcon="Find"
                PlaceholderText="Cerca" RelativePanel.AlignHorizontalCenterWithPanel="True"
                HorizontalAlignment="Center"
                Width="260" Height="32" />

            <RelativePanel Grid.Row="2"
                           Margin="32,32,32,20"
                           VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                           x:Name="CardPanel"
                           toolkit:FrameworkElementExtensions.EnableActualSizeBinding="true"
                           CornerRadius="8"
                           Padding="12"
                           BorderThickness="1"
                           BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                           Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">


                <Button x:Name="ButtonYesterday" Margin="0,8,0,0"
                        Click="ButtonYesterday_Click">
                    <FontIcon Glyph="&#xEC52;" HorizontalAlignment="Center" />
                </Button>


                <!-- should we set the firstdayofweek in code instead? -->
                <CalendarDatePicker x:Name="CalendarAgenda"
                                    RelativePanel.RightOf="ButtonYesterday"
                                    FirstDayOfWeek="Monday"
                                    PlaceholderText="Scegli una data" Grid.Row="1" Margin="8,8,8,0" />

                <Button x:Name="ButtonTomorrow" Margin="0,8,0,0"
                        RelativePanel.RightOf="CalendarAgenda"
                        Click="ButtonTomorrow_Click">
                    <FontIcon Glyph="&#xEBE7;" HorizontalAlignment="Center" />
                </Button>

                <!-- button to return to today's date-->
                <ToggleButton x:Name="ButtonToday" Content="Oggi" Margin="8,8,0,0"
                              RelativePanel.RightOf="ButtonTomorrow"
                              toolkit:FrameworkElementExtensions.Cursor="Hand"
                              Click="ButtonToday_Click" />


                <muxc:ProgressRing IsActive="True" x:Name="ProgressRingAgenda"
                                   RelativePanel.RightOf="ButtonToday"

                                   Margin="12,8,0,0"
                                   Visibility="{x:Bind AgendaViewModel.IsLoadingAgenda, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />


                <Button
                    x:Name="PopupLessonsButton"
                    Content="Tutte le lezioni"
                    Click="PopupLessonsButton_OnClick"
                    RelativePanel.AlignRightWithPanel="True"
                    Margin="0,8,0,0">
                </Button>

                <Button
                    x:Name="PopupAgendaButton"
                    Content="Tutti i compiti"
                    RelativePanel.LeftOf="PopupLessonsButton"
                    Click="PopupAgendaButton_OnClick"
                    Margin="0,8,6,0">
                </Button>


                <controls2:OverviewListView RelativePanel.Below="ButtonYesterday"
                                            RelativePanel.AlignRightWithPanel="True"
                                            RelativePanel.AlignLeftWithPanel="True"
                                            Margin="0,8,0,0" x:Name="OverviewListView">
                </controls2:OverviewListView>


            </RelativePanel>

        </Grid>

    </RelativePanel>
</Page>